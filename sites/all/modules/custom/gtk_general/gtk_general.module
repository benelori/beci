<?php

/**
 * Implements hook_menu().
 */
function gtk_general_menu() {
  $items['homepage'] = array(
    'title' => 'Coordinators',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'page callback' => 'gtk_general_blank_page'
  );

  $items['coordinators'] = array(
    'title' => 'Coordinators',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'page callback' => 'gtk_general_blank_page'
  );

  $items['members'] = array(
    'title' => 'Members',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'page callback' => 'gtk_general_blank_page'
  );

  $items['alumni'] = array(
    'title' => 'Alumni Members',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'page callback' => 'gtk_general_blank_page'
  );

  $items['highschool-alumni'] = array(
    'title' => 'Highschool Alumni Members',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'page callback' => 'gtk_general_blank_page'
  );

  $items['lecturers'] = array(
    'title' => 'Lecturers',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'page callback' => 'gtk_general_blank_page'
  );

  $items['contact'] = array(
    'title' => 'Contact Us',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'page callback' => 'gtk_general_blank_page'
  );

  $items['contact-success'] = array(
    'title' => 'Contact Us',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'page callback' => 'gtk_general_success_page'
  );

  $items['partners'] = array(
    'title' => 'Partners',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'page callback' => 'gtk_general_blank_page'
  );

  return $items;
}

function gtk_general_blank_page() {
  return '';
}

function gtk_general_success_page() {
  $output = '<div class="alert alert-success alert-dismissable">
<button class="close" aria-hidden="true" data-dismiss="alert" type="button">×</button>
<h2 class="element-invisible">Status message</h2>
Your message has been sent
</div>';

  return $output;
}

function gtk_general_contact_form() {
  $form = array();
  $form['name'] = array(
    '#type' => 'textfield',
    '#title' => t('Name'),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#element_validate' => array('gtk_validate_name'),
  );

  $form['mail'] = array(
    '#type' => 'textfield',
    '#title' => t('Email Address'),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#element_validate' => array('gtk_validate_email'),
  );

  $form['subject'] = array(
    '#type' => 'textfield',
    '#title' => t('Subject'),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
  );

  $form['message'] = array(
    '#type' => 'textarea',
    '#title' => t('Message'),
    '#required' => TRUE,
    '#cols' => 60,
    '#resizable' => FALSE
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Send'),
  );

  $form['#submit'] = array('gtk_general_send_contact_mail');

  return $form;
}

function gtk_validate_email($element, $form_state) {
  if (!valid_email_address($form_state['values']['mail'])) {
    form_error($element, t('Please enter valid email address'));
  }
}


function gtk_validate_name($element, $form_state) {
  $validation = preg_match('/\\d/', $form_state['values']['name']);
  if ($validation > 0) {
    form_error($element, t('Please enter valid name'));
  }
}

function gtk_general_send_contact_mail($form, &$form_state) {
  $module = 'gtk_general';
  $key = 'send_contact_mail';
  $language = language_default();
  $params = array();
  $from = NULL;
  $send = FALSE;
  $email = 'bene.lori89@gmail.com';
  $message = drupal_mail($module, $key, $email, $language, $params, $form_state['values']['mail'], $send);

  $message['subject'] = t('Somebody has sent you a contact email from the website.');
  $message['body'] = array();
  $message['body'][] = 'From: ' . check_plain($form_state['values']['mail']);
  $message['body'][] = 'Name: ' . check_plain($form_state['values']['name']);
  $message['body'][] = 'Subject: ' . check_plain($form_state['values']['subject']);
  $message['body'][] = 'Message: ' . check_plain($form_state['values']['message']);

  // Retrieve the responsible implementation for this message.
  $system = drupal_mail_system($module, $key);

  // Format the message body.
  $message = $system->format($message);

  // Send e-mail.
  $message['result'] = $system->mail($message);
  $form_state['redirect'] = 'contact-success';
}

/**
 * Implements hook_block_info().
 */
function gtk_general_block_info() {
  return array(
    'contact_info' => array(
      'info' => t('GTK Contact Info'),
      'cache' => DRUPAL_NO_CACHE,
    ),
    'contact_form' => array(
      'info' => t('GTK Contact Form'),
      'cache' => DRUPAL_NO_CACHE,
    ),
    'site_map' => array(
      'info' => t('Site Map'),
      'cache' => DRUPAL_NO_CACHE,
    ),
    'social_media_menu_link_block' => array(
      'info' => t('Social Media Icons'),
      'cache' => DRUPAL_NO_CACHE,
    ),
    'google_map_block' => array(
      'info' => t('Google Map BLock'),
      'cache' => DRUPAL_NO_CACHE,
    ),
    'homepage_calendar_link' => array(
      'info' => t('Home Page Calendar Link'),
      'cache' => DRUPAL_NO_CACHE,
    ),
    'latest_news_block' => array(
      'info' => t('Latest News Block'),
      'cache' => DRUPAL_NO_CACHE,
    ),
  );
}

/**
 * Implements hook_block_view().
 */
function gtk_general_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'contact_info':
      $address_default = array(
        'en' => '60, 21 Decembrie 1989 Street, Cluj Napoca 400124',
        'ro' => 'Str. 21 Decembrie 1989 nr.60, Cluj Napoca 400124',
        'hu' => '21 Decembrie 1989 utca 60, Kolozsvár 400124',
      );

      $data = array(
        'address' => variable_get('gtk_address', $address_default),
        'phone' => variable_get('gtk_telephone', '+40 726 377 090'),
        'email' => variable_get('gtk_email', 'office@gtk.ro'),
      );

      $block['content'] = array(
        '#theme' => 'contact_info',
        '#data' => $data,
      );
      break;

    case 'contact_form':
      $block['content'] = drupal_get_form('gtk_general_contact_form');
      break;

    case 'site_map':
      $block['content'] = theme('site_map');
      break;

    case 'social_media_menu_link_block':
      $social_media_links = array(
        'facebook' => variable_get('gtk_facebook_link', 'https://www.facebook.com/gtk.ro'),
        'google_plus' => variable_get('gtk_google_plus_link', 'https://plus.google.com/u/0/105548417833814696884/posts'),
        'linked_in' => variable_get('gtk_linked_in_link', 'https://www.linkedin.com/groups?home=&gid=3736596&trk=anet_ug_hm'),
      );

      $block['content'] = array(
        '#theme' => 'social_media_menu_link_block',
        '#data' => $social_media_links
      );
      break;

    case 'google_map_block':
      $address = 'GTK - Business Consulting Club, Bulevardul 21 Decembrie 1989, Cluj-Napoca, Cluj County';
      $block['content'] = '<div class="google-maps">
<iframe width="1170" height="480" frameborder="0" scrolling="no" marginheight="0" marginwidth="0" src="https://maps.google.ro/maps?q=' . $address . '&output=embed"></iframe>
</div>';
      break;

    case 'homepage_calendar_link':
      global $base_url;
      $output = '<div class="gtk-calendar-link-wrapper action-button col-xs-12 col-sm-3 col-md-3 col-lg-3">
<a class="gtk-calendar-link btn btn-primary btn-large" href="' . $base_url . '/event-created" target=" ">' . t('All Events'). '</a></div>';

      $block['content'] = $output;
      break;

    case 'latest_news_block':
      $node = menu_get_object();

      global $language;
      $wrapper = entity_metadata_wrapper('node', $node);

      $query = new EntityFieldQuery();

      $query->entityCondition('entity_type', 'node')
        ->entityCondition('bundle', 'gtk_blog_post')
        ->propertyCondition('status', NODE_PUBLISHED)
        ->propertyCondition('language', $language->language)
        ->fieldCondition('field_category', 'value', $wrapper->field_category->value(), '=')
        ->range(0, 5);

      $result = $query->execute();
      if (!empty($result)) {

        $output = '<ul class="latest-news-block">';

        foreach ($result['node'] as $node) {
          $full_node = node_load($node->nid);
          $output .= '<li><a href="/node/' . $node->nid . '">' . $full_node->title . '</a>' . '</li>';
        }
        $output .= '</ul>';

        $block['content'] = '<div class="latest-news-block-wrapper">'. $output. '</div>';
      }

      break;
  }
  return $block;
}

function gtk_general_site_map_menu_tree_main_menu_alter(&$tree, $menu) {
  foreach ($tree as $key => $menu_links) {
    $tree[$key]['below'] = array();
  }
}

/**
 * Implements hook_theme.
 */
function gtk_general_theme() {
  return array(
    'contact_info' => array(
      'variables' => array('data' => NULL),
    ),
    'social_media_menu_link_block' => array(
      'variables' => array('data' => NULL),
    ),
  );
}

function theme_contact_info($variables) {
  global $language;

  $output = gtk_general_contact_block_contact_info($variables, $language);
  $output .= gtk_general_contact_block_social_icons();

  return $output;
}

function gtk_general_contact_block_social_icons() {
  $output = '<ul class="icons-social icon-button-bg"><li><a href="https://www.facebook.com/gtk.ro" class="fa-button"><i class="fa fa-facebook"></i></a></li>
<li><a href="https://www.linkedin.com/groups?home=&gid=3736596&trk=anet_ug_hm" class="fa-button"><i class="fa fa-linkedin"></i></a></li>
<li><a href="https://plus.google.com/u/0/105548417833814696884/posts" class="fa-button"><i class="fa fa-google-plus"></i></a></li>
</ul>';

  return $output;
}

function gtk_general_contact_block_contact_info($variables, $language) {
  $output = '<ul class="tick">';

  $output .= "<li>" . $variables['data']['address'][$language->language] . "</li>";
  $output .= "<li>" . $variables['data']['phone'] . "</li>";
  $output .= "<li>" . $variables['data']['email'] . "</li>";
  $output .= "</ul>";

  return $output;
}

function theme_social_media_menu_link_block($variables) {
  // Gets the path to the images in the current theme.
  $path_to_theme = drupal_get_path('theme', 'yamato');
  $path_to_images = $path_to_theme . '/assets/images/';

  // Options for the l function used to build the links.
  $options =  array(
    'html' => TRUE,
    'attributes' => array('target' => '_blank')
  );

  // Associative array for each social network image.
  $settings = array(
    'facebook' => 'fb.jpg',
    'google_plus' => 'google-plus.jpg',
    'linked_in' => 'linked-in.png',
  );

  // Builds the unordered list with the images.
  $output = '<ul class="social_media_menu">';

  foreach ($settings as $network => $image) {
    $link = l(
      '<img src="/' . $path_to_images . $image . '">',
      $variables['data'][$network],
      $options
    );
    $output .= '<li class="social_media_menu_link">' . $link . '</li>';
  }

  $output .= "</ul>";

  return $output;
}

/**
 * Adds url aliases.
 */
function gtk_general_add_url_alias() {
  // Get all aliases.
  $url_alias = module_invoke_all('gtk_alias');

  // Create the listed aliases for the corresponding language.
  foreach ($url_alias as $alias) {
    gtk_general_alias_save($alias);
  }
}

/**
 * Implements hook_gtk_alias().
 */
function gtk_general_gtk_alias() {
  $url_alias = array(
    array(
      'source' => 'news',
      'alias' => 'hirek',
      'language' => 'hu'
    ),
    array(
      'source' => 'news',
      'alias' => 'stiri',
      'language' => 'ro'
    ),
    array(
      'source' => 'results',
      'alias' => 'eredmenyek',
      'language' => 'hu'
    ),
    array(
      'source' => 'results',
      'alias' => 'rezultate',
      'language' => 'ro'
    ),
    array(
      'source' => 'activities',
      'alias' => 'tevekenysegek',
      'language' => 'hu'
    ),
    array(
      'source' => 'activities',
      'alias' => 'activitati',
      'language' => 'ro'
    ),
    array(
      'source' => 'members',
      'alias' => 'tagok',
      'language' => 'hu'
    ),
    array(
      'source' => 'members',
      'alias' => 'membri',
      'language' => 'ro'
    ),
    array(
      'source' => 'coordinators',
      'alias' => 'koordinatorok',
      'language' => 'hu'
    ),
    array(
      'source' => 'coordinators',
      'alias' => 'coordinatori',
      'language' => 'ro'
    ),
    array(
      'source' => 'highschool-alumni',
      'alias' => 'kozepiskolas-alumni',
      'language' => 'hu'
    ),
    array(
      'source' => 'highschool-alumni',
      'alias' => 'alumni-liceeni',
      'language' => 'ro'
    ),
    array(
      'source' => 'partners',
      'alias' => 'partnerek',
      'language' => 'hu'
    ),
    array(
      'source' => 'partners',
      'alias' => 'parteneri',
      'language' => 'ro'
    ),
    array(
      'source' => 'support',
      'alias' => 'szervezetek',
      'language' => 'hu'
    ),
    array(
      'source' => 'support',
      'alias' => 'organizatii',
      'language' => 'ro'
    ),
    array(
      'source' => 'lecturers',
      'alias' => 'eloadok',
      'language' => 'hu'
    ),
    array(
      'source' => 'lecturers',
      'alias' => 'invitati',
      'language' => 'ro'
    ),
    array(
      'source' => 'contact',
      'alias' => 'kontakt',
      'language' => 'hu'
    ),
    array(
      'source' => 'image-gallery',
      'alias' => 'kep-galeria',
      'language' => 'hu'
    ),
    array(
      'source' => 'image-gallery',
      'alias' => 'galerie-imagini',
      'language' => 'ro'
    ),
  );

  return $url_alias;
}

/**
 * Saves url aliases.
 */
function gtk_general_alias_save($alias) {
  // Checks if alias already exists.
  $query = db_select('url_alias', 'ua')
    ->fields('ua', array('pid'))
    ->condition('source', $alias['source'])
    ->condition('language', $alias['language']);
  $alias['pid'] = $query->execute()->fetchField();

  // Insert the new alias in the url_alias table.
  path_save($alias);
}

/**
 * Implements hook_form_FORM_ID_alter() for pathauto_bulk_update_form.
 */
function gtk_general_form_pathauto_bulk_update_form_alter(&$form, &$form_state) {
  // Add ifp alias update to options.
  $callback = 'gtk_general_aliases_bulk_update_batch_process';
  $form['update']['#options'][$callback] = t('GTK paths');
  $form['#update_callbacks'][$callback] = new stdClass();
  $form['#update_callbacks'][$callback]->batch_file = drupal_get_path('module', 'gtk_general') . '/gtk_general.module';
}

/**
 * Batch operation to update GTK URL aliases.
 */
function gtk_general_aliases_bulk_update_batch_process(&$context) {
  $url_aliases = module_invoke_all('gtk_alias');
  if (empty($context['sandbox'])) {
    // Initiate multistep processing.
    $context['sandbox']['progress'] = 0;
    $context['sandbox']['current_alias'] = 0;
    $context['sandbox']['max'] = count($url_aliases);
    $context['sandbox']['total'] = $context['sandbox']['max'];
  }
  $batch = array_slice($url_aliases, $context['sandbox']['current_alias'], variable_get('gtk_general_alias_batch_update_number', 20));
  foreach ($url_aliases as $url_alias) {
    // Save url alias.
    gtk_general_alias_save($url_alias);
    $context['sandbox']['progress']++;
  }
  // Check number of alias we have to process.
  $processing_no = $context['sandbox']['current_alias'] + variable_get('gtk_general_alias_batch_update_number', 20);
  $context['sandbox']['current_alias'] = ($processing_no < count($url_aliases)) ? $processing_no : count($url_aliases) ;
  $context['message'] = t('Processed @current out of @total aliases.', array(
      '@current' => $context['sandbox']['current_alias'],
      '@total' => $context['sandbox']['total']
    ));
  // Multi-step processing : report progress.
  if ($context['sandbox']['progress'] != $context['sandbox']['max']) {
    $context['finished'] = $context['sandbox']['progress'] / $context['sandbox']['max'];
  }
}
